# -*- coding: utf-8 -*-
"""Python.basic2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a-9s9MRDE_XQ8QZWwYvE4dhmTSq6Wx1S
"""

# Variable
a=10
print(a)
b=12,13
print(b)
c="hello"
print(c)
d=True
print(d)

#SWAPPING
a=20
b=25
print("Before Swapping:")
a,b=b,a
print("After Swapping:")
print("a=",a)
print("b=",b)
print(b)

#SWAPPING
a=20
b=25
print("a=",a,"b=",b);
temp=a
a=b
b=temp
print("Before Swapping:")
print("After Swapping:")
print("a=",a,"b=",b)

"""CONDITIONAL STATEMENT

Conditional alllow you,the programmer,to allow your program to make decisions

> denotes greater than
< denotres less than
>= denotes"greater than or equal to"
<= denotes"less than or equal to"
== denotes"equals to"
!= denotes"not equal to"

IF STATEMENT
  SYNTAX:
   if condition:
      #body of if statement
"""

x=int(input("What's x?"))
y=int(input("What's y?"))
if x<y:
  print("x is less than y")

x=int(input("What's x?"))
y=int(input("What's y?"))
if x<y:
  print("x is less than y")
if x>y:
  print("x is greater than y")
if x==y:
  print("x is equal to y")

# Marks - (0,100)
marks = int(input("Enter your marks obtained in a test: "))
if(marks<0 or marks>100):
  print("Invalid marks")

#STATISTICS AND PROBABILITY
A = {1,2,3,8}
B = {3,4}

print(1 in A)

print(4 in A)

flag = 4 in A
type(flag)

print(B.issubset(A))

def f_issubset(A,B):
  for e in A:
    if e in B:
      pass
    else:
      return False
  return True

print(f_issubset(B,A))

print(f_issubset({2,3,4},{1,2,3,4,5,6}))

import numpy as np

Omg = set(np.arange(10))
type(Omg)

Omg

A = set(np.arange(0,9,2))

A

B= set(np.arange(1,9,3))

B

A.union(B)

A.intersection(B)

B.add(6)

B

A.intersection(B)

A.difference(B)

A_complement = Omg.difference(A)

A_complement

B_complement = Omg.difference(B)

Omg.difference(A.union(B))

A_complement.intersection(B_complement)

A_complement.union(B_complement)

"""RANDOM EXPERIMENT
OUTCOME
SAMPLE SPACE
EVENT(FROM EVENT TO A NUMBER)(AXIOMS OF PROBABILITY)(CONDITIONAL PROBABILITY)(TOTAL PROBABILITY THEOREM)
INDEPENDENCE
CONDITIONAL INDEPENCE
IN PROBABILITY

UNIFORM DISTRIBUTION
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import scipy.stats as stats

uniform_data = stats.uniform.rvs(size=1000,         #Generate 1000000 numbers
                                 loc = 0,           #From 0
                                 scale = 10)        # To 10

pd.DataFrame(uniform_data).plot(kind="density",     #plot the distribution
                                figsize=(9,9),
                                xlim=(-1,11))

stats.uniform.cdf(x=2.5,       #cutoff value(quantile) to check
                  loc=0,         #distribution start
                  scale=10)      #distribution end

stats.uniform.ppf(q=0.4,       #probability cutoff
                  loc=0,         #distribution start
                  scale=10)      #distribution end

for x in range(-1,12,3):
  print("Density at x value"+str(x))
  print(stats.uniform.pdf(x,loc=0,scale=10))

import random
random.randint(0,10)    #Get a random integer to the specified range

random.choice([2,4,6,9])        #Get a random element from a sequence

random.random()        #Get a real number between 0 and 1

random.uniform(0,10)        #Get a real in the specified range

a = int(input("enter first number :"))
b = int(input("enter second number :"))
avg=(a+b)/2
print("average of two numbers is :",avg)

radius=float(input("enter radius :"))
area=3.14*radius*radius
circumference=2*3.14*radius
print("area of circle is :",area)
print("circumference of circle is :",circumference)

#conditional
x=20
y=25
if x<y:
  print("x is less than y")
if x>y:
  print("x is greater than y")
if x==y:
  print("x is equal to y")

x=24
  y=45
  if x<y:
    print("x is less than y")
   elif :
     print("x is greater than y")